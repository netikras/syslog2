#!/bin/bash

PID=$$
PIDFILE="/var/run/syslog2.pid"
LOGFILE="/var/log/syslog"
LOGPIPE="/dev/log"

AlreadyRUNNING_PID=""
RUNNING=1


function check_if_running {
	AlreadyRUNNING_PID=$(ps -p $(cat ${PIDFILE} 2>/dev/null) 2>/dev/null |grep -v PID|awk '{print $1}' );
	[ "${AlreadyRUNNING_PID}" == "" ] && {
		return 1;
	} || {
		return 0;
	}
}

#echo ${PID} >${PIDFILE}

function prepare_files {
	[ ! -p ${LOGPIPE} ] && { 
		mkfifo -m 666 ${LOGPIPE} || RUNNING=0;
	}

	[ ! -f ${LOGFILE} ] && {
		touch ${LOGFILE} || RUNNING=0;
		chmod 664 ${LOGFILE} || RUNNING=0;
	}
}

function append_log {
	LINE="$1"
	TIMESTAMP="$(date +%Y-%m-%d\ %H:%M:%S)"

	echo -e "${TIMESTAMP} ${LINE}" >>${LOGFILE}
}

function start_loop {
	[ "${RUNNING}" == "1" ] && { echo ${PID} >${PIDFILE}; append_log "$(whoami) [syslog:${PID}] starting..."; } || RUNNING=0
	while [ "${RUNNING}" == "1" ] ;
	do
		LINE="$(cat ${LOGPIPE})"
		#TIMESTAMP=$(date +%s)
		#TIMESTAMP="$(date +%Y-%m-%d\ %H:%M:%S)"
		#echo -e "${TIMESTAMP} ${LINE}" >>${LOGFILE}
		append_log "${LINE}"
	done &
	disown
	
	NEWPID=$!
	echo ${NEWPID} >${PIDFILE}
	append_log "$(whoami) [syslog:${PID}] started as ${NEWPID}..."
}



function START {
	check_if_running && { 
		echo "Syslog is already running under PID: ${AlreadyRUNNING_PID}"; 
		exit 1; 
	} ;
	echo "Preparing files...";
	prepare_files;
	echo "Starting...";
	start_loop;
}

function STOP {
	## PRE-checks
	check_if_running  && {
		append_log "$(whoami) [syslog:${PID}] stopping ${AlreadyRUNNING_PID}...";
                echo "Killing syslog under PID: ${AlreadyRUNNING_PID}";
                kill ${AlreadyRUNNING_PID};
		true;
	} || {
		echo "Syslog is not running"; 
	}

	## POST-checks
	check_if_running && { 
		echo "Failed to stop Syslog2. Running under PID '${AlreadyRUNNING_PID}'"; 
	} || { 
		echo >${PIDFILE};
	}

		
}

case $1 in 
	start) 
		START;
	;;
	stop)
		STOP;
	;;
	restart)
		STOP;
		START;
	;;
	status)
		check_if_running && echo "Syslog2 is running under PID: ${AlreadyRUNNING_PID}" || echo "Syslog2 is not running."
	;;
	*)
		echo "What do you want?"
		echo "You can: start|stop|status"
	;;
esac


